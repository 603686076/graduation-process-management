<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.graduation.mapper.TeacherMapper">
    
    <resultMap type="SelectTeacher" id="SelectTeacherResult">
        <result property="nickName"    column="nick_name"    />
        <result property="quantity"    column="quantity"    />
        <result property="id"    column="id"    />
    </resultMap>

    <resultMap type="Teacher" id="TeacherResult">
        <result property="id"    column="id"    />
        <result property="group"    column="group"    />
        <result property="title"    column="title"    />
        <result property="quantity"    column="quantity"    />
        <result property="description"    column="description"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectTeacherVo">
        select s.nick_name,
               t.quantity,
               t.id
        from sys_user s join teacher t on t.id = s.user_id
    </sql>

    <select id="selectTeacherList" parameterType="string" resultMap="SelectTeacherResult">
        <include refid="selectTeacherVo"/>
        <where>
            <if test="nickName != null "> and nick_name = #{nickName}</if>
        </where>
    </select>
    
    <select id="selectTeacherById" parameterType="Long" resultMap="TeacherResult">
        select id, `group`, title, quantity, description, update_time from teacher
        where id = #{id}
    </select>
        
    <insert id="insertTeacher" parameterType="Teacher">
        insert into teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="group != null">group,</if>
            <if test="title != null">title,</if>
            <if test="quantity != null">quantity,</if>
            <if test="description != null">description,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="group != null">#{group},</if>
            <if test="title != null">#{title},</if>
            <if test="quantity != null">#{quantity},</if>
            <if test="description != null">#{description},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateTeacher" parameterType="Teacher">
        update teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="group != null">group = #{group},</if>
            <if test="title != null">title = #{title},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="description != null">description = #{description},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTeacherById" parameterType="Long">
        delete from teacher where id = #{id}
    </delete>

    <delete id="deleteTeacherByIds" parameterType="String">
        delete from teacher where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>